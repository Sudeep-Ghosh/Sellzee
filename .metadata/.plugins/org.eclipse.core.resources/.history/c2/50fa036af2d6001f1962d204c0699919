package com.sellzee.authService.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.sellzee.authService.clients.AdminClient;
import com.sellzee.authService.model.Admin;
import com.sellzee.authService.model.User;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/admin")
@PreAuthorize("hasRole('ADMIN')")
public class AdminController {
	
	@Autowired
	private AdminClient adminClient;
	
	@PostMapping("/addAdmin")
	public ResponseEntity<Admin> addAdmin(@Valid @RequestBody Admin admin){
		return new ResponseEntity<Admin>(adminClient.addAdmin(admin),HttpStatus.OK);
	}
	
	@PutMapping("/updateAdmin")
	public ResponseEntity<Admin> updateAdmin(@RequestBody Admin admin,@PathVariable String adminId){
		return new ResponseEntity<Admin>(adminClient.updateAdmin(admin, adminId),HttpStatus.OK);
	}
	
	@GetMapping("/getAdminByUsername/{username}")
	public ResponseEntity<Admin> getAdminByUsername(@PathVariable String username){
		return new ResponseEntity<Admin>(adminClient.getAdminByUsername(username),HttpStatus.OK);
	}
	
	@DeleteMapping("/deleteAdmin/{adminId}")
	public ResponseEntity<Admin> deleteAdmin(@PathVariable String adminId){
		return new ResponseEntity<Admin>(adminClient.deleteAdmin(adminId),HttpStatus.OK);
	}
	
	@GetMapping("/getAllUsers")
	public ResponseEntity<List<User>> getAllUsers(){
		return new ResponseEntity<List<User>>(adminClient.getAllUsers(),HttpStatus.OK);
	}
	
	@GetMapping("/getUserById/{userId}")
	public ResponseEntity<User> getUserById(@PathVariable String userId){
		return new ResponseEntity<User> (adminClient.getUserById(userId),HttpStatus.OK);
	}
	
	@GetMapping("/getUserByUsername/{username}")
	public ResponseEntity<User> getUserByUsername(@PathVariable String username){
		return new ResponseEntity<User>(adminClient.getUserByUsername(username),HttpStatus.OK);
	}
	
	@DeleteMapping("/deleteUser/{userId}")
	public ResponseEntity<User> deleteUser(@PathVariable String userId){
		return new ResponseEntity<User>(adminClient.deleteUser(userId),HttpStatus.OK);
	}
}
